// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/bankAccount.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BankAccounts {

  /// <summary>Holder for reflection information generated from Protos/bankAccount.proto</summary>
  public static partial class BankAccountReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/bankAccount.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BankAccountReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQcm90b3MvYmFua0FjY291bnQucHJvdG8SC0JhbmtBY2NvdW50Ig8KDUVt",
            "cHR5UmVzcG9uc2UiJwoZR2V0QnlJZEJhbmtBY2NvdW50UmVxdWVzdBIKCgJp",
            "ZBgBIAEoCSIbChlHZXRBbGxCYW5rQWNjb3VudHNSZXF1ZXN0Io0BChhDcmVh",
            "dGVCYW5rQWNjb3VudFJlcXVlc3QSEAoIYmFua1R5cGUYASABKAUSCgoCYWcY",
            "AiABKAUSDQoFYWdEaWcYAyABKAUSFQoNYWNjb3VudE51bWJlchgEIAEoBRIY",
            "ChBhY2NvdW50TnVtYmVyRGlnGAUgASgFEhMKC2Rlc2NyaXB0aW9uGAYgASgJ",
            "IpkBChhVcGRhdGVCYW5rQWNjb3VudFJlcXVlc3QSEAoIYmFua1R5cGUYASAB",
            "KAUSCgoCYWcYAiABKAUSDQoFYWdEaWcYAyABKAUSFQoNYWNjb3VudE51bWJl",
            "chgEIAEoBRIYChBhY2NvdW50TnVtYmVyRGlnGAUgASgFEhMKC2Rlc2NyaXB0",
            "aW9uGAYgASgJEgoKAmlkGAcgASgJIiYKGERlbGV0ZUJhbmtBY2NvdW50UmVx",
            "dWVzdBIKCgJpZBgBIAEoCSKIAQoTQmFua0FjY291bnRSZXNwb25zZRIQCghi",
            "YW5rVHlwZRgBIAEoBRIKCgJhZxgCIAEoBRINCgVhZ0RpZxgDIAEoBRIVCg1h",
            "Y2NvdW50TnVtYmVyGAQgASgFEhgKEGFjY291bnROdW1iZXJEaWcYBSABKAUS",
            "EwoLZGVzY3JpcHRpb24YBiABKAkiRwoUQmFua0FjY291bnRzUmVzcG9uc2US",
            "LwoFaXRlbXMYASADKAsyIC5CYW5rQWNjb3VudC5CYW5rQWNjb3VudFJlc3Bv",
            "bnNlMqkDChZHcnBjQmFua0FjY291bnRTZXJ2aWNlEksKBkNyZWF0ZRIlLkJh",
            "bmtBY2NvdW50LkNyZWF0ZUJhbmtBY2NvdW50UmVxdWVzdBoaLkJhbmtBY2Nv",
            "dW50LkVtcHR5UmVzcG9uc2USSwoGVXBkYXRlEiUuQmFua0FjY291bnQuVXBk",
            "YXRlQmFua0FjY291bnRSZXF1ZXN0GhouQmFua0FjY291bnQuRW1wdHlSZXNw",
            "b25zZRJLCgZEZWxldGUSJS5CYW5rQWNjb3VudC5EZWxldGVCYW5rQWNjb3Vu",
            "dFJlcXVlc3QaGi5CYW5rQWNjb3VudC5FbXB0eVJlc3BvbnNlElMKB0dldEJ5",
            "SWQSJi5CYW5rQWNjb3VudC5HZXRCeUlkQmFua0FjY291bnRSZXF1ZXN0GiAu",
            "QmFua0FjY291bnQuQmFua0FjY291bnRSZXNwb25zZRJTCgZHZXRBbGwSJi5C",
            "YW5rQWNjb3VudC5HZXRBbGxCYW5rQWNjb3VudHNSZXF1ZXN0GiEuQmFua0Fj",
            "Y291bnQuQmFua0FjY291bnRzUmVzcG9uc2VCD6oCDEJhbmtBY2NvdW50c2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BankAccounts.EmptyResponse), global::BankAccounts.EmptyResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BankAccounts.GetByIdBankAccountRequest), global::BankAccounts.GetByIdBankAccountRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BankAccounts.GetAllBankAccountsRequest), global::BankAccounts.GetAllBankAccountsRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BankAccounts.CreateBankAccountRequest), global::BankAccounts.CreateBankAccountRequest.Parser, new[]{ "BankType", "Ag", "AgDig", "AccountNumber", "AccountNumberDig", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BankAccounts.UpdateBankAccountRequest), global::BankAccounts.UpdateBankAccountRequest.Parser, new[]{ "BankType", "Ag", "AgDig", "AccountNumber", "AccountNumberDig", "Description", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BankAccounts.DeleteBankAccountRequest), global::BankAccounts.DeleteBankAccountRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BankAccounts.BankAccountResponse), global::BankAccounts.BankAccountResponse.Parser, new[]{ "BankType", "Ag", "AgDig", "AccountNumber", "AccountNumberDig", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BankAccounts.BankAccountsResponse), global::BankAccounts.BankAccountsResponse.Parser, new[]{ "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EmptyResponse : pb::IMessage<EmptyResponse> {
    private static readonly pb::MessageParser<EmptyResponse> _parser = new pb::MessageParser<EmptyResponse>(() => new EmptyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BankAccounts.BankAccountReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse(EmptyResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse Clone() {
      return new EmptyResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetByIdBankAccountRequest : pb::IMessage<GetByIdBankAccountRequest> {
    private static readonly pb::MessageParser<GetByIdBankAccountRequest> _parser = new pb::MessageParser<GetByIdBankAccountRequest>(() => new GetByIdBankAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByIdBankAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BankAccounts.BankAccountReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdBankAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdBankAccountRequest(GetByIdBankAccountRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdBankAccountRequest Clone() {
      return new GetByIdBankAccountRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByIdBankAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByIdBankAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByIdBankAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllBankAccountsRequest : pb::IMessage<GetAllBankAccountsRequest> {
    private static readonly pb::MessageParser<GetAllBankAccountsRequest> _parser = new pb::MessageParser<GetAllBankAccountsRequest>(() => new GetAllBankAccountsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllBankAccountsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BankAccounts.BankAccountReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllBankAccountsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllBankAccountsRequest(GetAllBankAccountsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllBankAccountsRequest Clone() {
      return new GetAllBankAccountsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllBankAccountsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllBankAccountsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllBankAccountsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CreateBankAccountRequest : pb::IMessage<CreateBankAccountRequest> {
    private static readonly pb::MessageParser<CreateBankAccountRequest> _parser = new pb::MessageParser<CreateBankAccountRequest>(() => new CreateBankAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateBankAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BankAccounts.BankAccountReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBankAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBankAccountRequest(CreateBankAccountRequest other) : this() {
      bankType_ = other.bankType_;
      ag_ = other.ag_;
      agDig_ = other.agDig_;
      accountNumber_ = other.accountNumber_;
      accountNumberDig_ = other.accountNumberDig_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBankAccountRequest Clone() {
      return new CreateBankAccountRequest(this);
    }

    /// <summary>Field number for the "bankType" field.</summary>
    public const int BankTypeFieldNumber = 1;
    private int bankType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BankType {
      get { return bankType_; }
      set {
        bankType_ = value;
      }
    }

    /// <summary>Field number for the "ag" field.</summary>
    public const int AgFieldNumber = 2;
    private int ag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ag {
      get { return ag_; }
      set {
        ag_ = value;
      }
    }

    /// <summary>Field number for the "agDig" field.</summary>
    public const int AgDigFieldNumber = 3;
    private int agDig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AgDig {
      get { return agDig_; }
      set {
        agDig_ = value;
      }
    }

    /// <summary>Field number for the "accountNumber" field.</summary>
    public const int AccountNumberFieldNumber = 4;
    private int accountNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountNumber {
      get { return accountNumber_; }
      set {
        accountNumber_ = value;
      }
    }

    /// <summary>Field number for the "accountNumberDig" field.</summary>
    public const int AccountNumberDigFieldNumber = 5;
    private int accountNumberDig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountNumberDig {
      get { return accountNumberDig_; }
      set {
        accountNumberDig_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateBankAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateBankAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BankType != other.BankType) return false;
      if (Ag != other.Ag) return false;
      if (AgDig != other.AgDig) return false;
      if (AccountNumber != other.AccountNumber) return false;
      if (AccountNumberDig != other.AccountNumberDig) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BankType != 0) hash ^= BankType.GetHashCode();
      if (Ag != 0) hash ^= Ag.GetHashCode();
      if (AgDig != 0) hash ^= AgDig.GetHashCode();
      if (AccountNumber != 0) hash ^= AccountNumber.GetHashCode();
      if (AccountNumberDig != 0) hash ^= AccountNumberDig.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BankType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BankType);
      }
      if (Ag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Ag);
      }
      if (AgDig != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AgDig);
      }
      if (AccountNumber != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AccountNumber);
      }
      if (AccountNumberDig != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AccountNumberDig);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BankType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BankType);
      }
      if (Ag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ag);
      }
      if (AgDig != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgDig);
      }
      if (AccountNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountNumber);
      }
      if (AccountNumberDig != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountNumberDig);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateBankAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.BankType != 0) {
        BankType = other.BankType;
      }
      if (other.Ag != 0) {
        Ag = other.Ag;
      }
      if (other.AgDig != 0) {
        AgDig = other.AgDig;
      }
      if (other.AccountNumber != 0) {
        AccountNumber = other.AccountNumber;
      }
      if (other.AccountNumberDig != 0) {
        AccountNumberDig = other.AccountNumberDig;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BankType = input.ReadInt32();
            break;
          }
          case 16: {
            Ag = input.ReadInt32();
            break;
          }
          case 24: {
            AgDig = input.ReadInt32();
            break;
          }
          case 32: {
            AccountNumber = input.ReadInt32();
            break;
          }
          case 40: {
            AccountNumberDig = input.ReadInt32();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateBankAccountRequest : pb::IMessage<UpdateBankAccountRequest> {
    private static readonly pb::MessageParser<UpdateBankAccountRequest> _parser = new pb::MessageParser<UpdateBankAccountRequest>(() => new UpdateBankAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateBankAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BankAccounts.BankAccountReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBankAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBankAccountRequest(UpdateBankAccountRequest other) : this() {
      bankType_ = other.bankType_;
      ag_ = other.ag_;
      agDig_ = other.agDig_;
      accountNumber_ = other.accountNumber_;
      accountNumberDig_ = other.accountNumberDig_;
      description_ = other.description_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBankAccountRequest Clone() {
      return new UpdateBankAccountRequest(this);
    }

    /// <summary>Field number for the "bankType" field.</summary>
    public const int BankTypeFieldNumber = 1;
    private int bankType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BankType {
      get { return bankType_; }
      set {
        bankType_ = value;
      }
    }

    /// <summary>Field number for the "ag" field.</summary>
    public const int AgFieldNumber = 2;
    private int ag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ag {
      get { return ag_; }
      set {
        ag_ = value;
      }
    }

    /// <summary>Field number for the "agDig" field.</summary>
    public const int AgDigFieldNumber = 3;
    private int agDig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AgDig {
      get { return agDig_; }
      set {
        agDig_ = value;
      }
    }

    /// <summary>Field number for the "accountNumber" field.</summary>
    public const int AccountNumberFieldNumber = 4;
    private int accountNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountNumber {
      get { return accountNumber_; }
      set {
        accountNumber_ = value;
      }
    }

    /// <summary>Field number for the "accountNumberDig" field.</summary>
    public const int AccountNumberDigFieldNumber = 5;
    private int accountNumberDig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountNumberDig {
      get { return accountNumberDig_; }
      set {
        accountNumberDig_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 7;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateBankAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateBankAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BankType != other.BankType) return false;
      if (Ag != other.Ag) return false;
      if (AgDig != other.AgDig) return false;
      if (AccountNumber != other.AccountNumber) return false;
      if (AccountNumberDig != other.AccountNumberDig) return false;
      if (Description != other.Description) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BankType != 0) hash ^= BankType.GetHashCode();
      if (Ag != 0) hash ^= Ag.GetHashCode();
      if (AgDig != 0) hash ^= AgDig.GetHashCode();
      if (AccountNumber != 0) hash ^= AccountNumber.GetHashCode();
      if (AccountNumberDig != 0) hash ^= AccountNumberDig.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BankType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BankType);
      }
      if (Ag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Ag);
      }
      if (AgDig != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AgDig);
      }
      if (AccountNumber != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AccountNumber);
      }
      if (AccountNumberDig != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AccountNumberDig);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BankType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BankType);
      }
      if (Ag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ag);
      }
      if (AgDig != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgDig);
      }
      if (AccountNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountNumber);
      }
      if (AccountNumberDig != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountNumberDig);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateBankAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.BankType != 0) {
        BankType = other.BankType;
      }
      if (other.Ag != 0) {
        Ag = other.Ag;
      }
      if (other.AgDig != 0) {
        AgDig = other.AgDig;
      }
      if (other.AccountNumber != 0) {
        AccountNumber = other.AccountNumber;
      }
      if (other.AccountNumberDig != 0) {
        AccountNumberDig = other.AccountNumberDig;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BankType = input.ReadInt32();
            break;
          }
          case 16: {
            Ag = input.ReadInt32();
            break;
          }
          case 24: {
            AgDig = input.ReadInt32();
            break;
          }
          case 32: {
            AccountNumber = input.ReadInt32();
            break;
          }
          case 40: {
            AccountNumberDig = input.ReadInt32();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteBankAccountRequest : pb::IMessage<DeleteBankAccountRequest> {
    private static readonly pb::MessageParser<DeleteBankAccountRequest> _parser = new pb::MessageParser<DeleteBankAccountRequest>(() => new DeleteBankAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteBankAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BankAccounts.BankAccountReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBankAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBankAccountRequest(DeleteBankAccountRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBankAccountRequest Clone() {
      return new DeleteBankAccountRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteBankAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteBankAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteBankAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BankAccountResponse : pb::IMessage<BankAccountResponse> {
    private static readonly pb::MessageParser<BankAccountResponse> _parser = new pb::MessageParser<BankAccountResponse>(() => new BankAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BankAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BankAccounts.BankAccountReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankAccountResponse(BankAccountResponse other) : this() {
      bankType_ = other.bankType_;
      ag_ = other.ag_;
      agDig_ = other.agDig_;
      accountNumber_ = other.accountNumber_;
      accountNumberDig_ = other.accountNumberDig_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankAccountResponse Clone() {
      return new BankAccountResponse(this);
    }

    /// <summary>Field number for the "bankType" field.</summary>
    public const int BankTypeFieldNumber = 1;
    private int bankType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BankType {
      get { return bankType_; }
      set {
        bankType_ = value;
      }
    }

    /// <summary>Field number for the "ag" field.</summary>
    public const int AgFieldNumber = 2;
    private int ag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ag {
      get { return ag_; }
      set {
        ag_ = value;
      }
    }

    /// <summary>Field number for the "agDig" field.</summary>
    public const int AgDigFieldNumber = 3;
    private int agDig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AgDig {
      get { return agDig_; }
      set {
        agDig_ = value;
      }
    }

    /// <summary>Field number for the "accountNumber" field.</summary>
    public const int AccountNumberFieldNumber = 4;
    private int accountNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountNumber {
      get { return accountNumber_; }
      set {
        accountNumber_ = value;
      }
    }

    /// <summary>Field number for the "accountNumberDig" field.</summary>
    public const int AccountNumberDigFieldNumber = 5;
    private int accountNumberDig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountNumberDig {
      get { return accountNumberDig_; }
      set {
        accountNumberDig_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BankAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BankAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BankType != other.BankType) return false;
      if (Ag != other.Ag) return false;
      if (AgDig != other.AgDig) return false;
      if (AccountNumber != other.AccountNumber) return false;
      if (AccountNumberDig != other.AccountNumberDig) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BankType != 0) hash ^= BankType.GetHashCode();
      if (Ag != 0) hash ^= Ag.GetHashCode();
      if (AgDig != 0) hash ^= AgDig.GetHashCode();
      if (AccountNumber != 0) hash ^= AccountNumber.GetHashCode();
      if (AccountNumberDig != 0) hash ^= AccountNumberDig.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BankType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BankType);
      }
      if (Ag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Ag);
      }
      if (AgDig != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AgDig);
      }
      if (AccountNumber != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AccountNumber);
      }
      if (AccountNumberDig != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AccountNumberDig);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BankType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BankType);
      }
      if (Ag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ag);
      }
      if (AgDig != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgDig);
      }
      if (AccountNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountNumber);
      }
      if (AccountNumberDig != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountNumberDig);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BankAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.BankType != 0) {
        BankType = other.BankType;
      }
      if (other.Ag != 0) {
        Ag = other.Ag;
      }
      if (other.AgDig != 0) {
        AgDig = other.AgDig;
      }
      if (other.AccountNumber != 0) {
        AccountNumber = other.AccountNumber;
      }
      if (other.AccountNumberDig != 0) {
        AccountNumberDig = other.AccountNumberDig;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BankType = input.ReadInt32();
            break;
          }
          case 16: {
            Ag = input.ReadInt32();
            break;
          }
          case 24: {
            AgDig = input.ReadInt32();
            break;
          }
          case 32: {
            AccountNumber = input.ReadInt32();
            break;
          }
          case 40: {
            AccountNumberDig = input.ReadInt32();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BankAccountsResponse : pb::IMessage<BankAccountsResponse> {
    private static readonly pb::MessageParser<BankAccountsResponse> _parser = new pb::MessageParser<BankAccountsResponse>(() => new BankAccountsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BankAccountsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BankAccounts.BankAccountReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankAccountsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankAccountsResponse(BankAccountsResponse other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankAccountsResponse Clone() {
      return new BankAccountsResponse(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BankAccounts.BankAccountResponse> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::BankAccounts.BankAccountResponse.Parser);
    private readonly pbc::RepeatedField<global::BankAccounts.BankAccountResponse> items_ = new pbc::RepeatedField<global::BankAccounts.BankAccountResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BankAccounts.BankAccountResponse> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BankAccountsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BankAccountsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BankAccountsResponse other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
