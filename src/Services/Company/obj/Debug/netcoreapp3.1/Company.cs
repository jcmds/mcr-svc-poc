// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/company.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Company {

  /// <summary>Holder for reflection information generated from Protos/company.proto</summary>
  public static partial class CompanyReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/company.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CompanyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQcm90b3MvY29tcGFueS5wcm90bxIHQ29tcGFueSIPCg1FbXB0eVJlc3Bv",
            "bnNlIiMKFUdldEJ5SWRDb21wYW55UmVxdWVzdBIKCgJpZBgBIAEoCSIYChZH",
            "ZXRBbGxDb21wYW5pZXNSZXF1ZXN0Ip8BChRDcmVhdGVDb21wYW55UmVxdWVz",
            "dBIRCglsZWdhbE5hbWUYASABKAkSEQoJdHJhZGVOYW1lGAIgASgJEhUKDWNv",
            "bnRhY3ROdW1iZXIYAyABKAkSEAoIZG9jdW1lbnQYBCABKAkSFQoNYmFua0Fj",
            "Y291bnRJZBgFIAEoCRIhCgdBZGRyZXNzGAYgASgLMhAuQ29tcGFueS5BZGRy",
            "ZXNzIm4KB0FkZHJlc3MSDgoGU3RyZWV0GAEgASgJEhAKCERpc3RyaWN0GAIg",
            "ASgJEgwKBENpdHkYAyABKAkSDgoGTnVtYmVyGAQgASgJEhIKCkNvbXBsZW1l",
            "bnQYBSABKAkSDwoHWmlwQ29kZRgGIAEoCSKrAQoUVXBkYXRlQ29tcGFueVJl",
            "cXVlc3QSCgoCaWQYASABKAkSEQoJbGVnYWxOYW1lGAIgASgJEhEKCXRyYWRl",
            "TmFtZRgDIAEoCRIVCg1jb250YWN0TnVtYmVyGAQgASgJEhAKCGRvY3VtZW50",
            "GAUgASgJEhUKDWJhbmtBY2NvdW50SWQYBiABKAkSIQoHQWRkcmVzcxgHIAEo",
            "CzIQLkNvbXBhbnkuQWRkcmVzcyIiChREZWxldGVDb21wYW55UmVxdWVzdBIK",
            "CgJpZBgBIAEoCSKmAQoPQ29tcGFueVJlc3BvbnNlEgoKAmlkGAEgASgJEhEK",
            "CWxlZ2FsTmFtZRgCIAEoCRIRCgl0cmFkZU5hbWUYAyABKAkSFQoNY29udGFj",
            "dE51bWJlchgEIAEoCRIQCghkb2N1bWVudBgFIAEoCRIVCg1iYW5rQWNjb3Vu",
            "dElkGAYgASgJEiEKB0FkZHJlc3MYByABKAsyEC5Db21wYW55LkFkZHJlc3Mi",
            "PAoRQ29tcGFuaWVzUmVzcG9uc2USJwoFaXRlbXMYASADKAsyGC5Db21wYW55",
            "LkNvbXBhbnlSZXNwb25zZTLjAgoSR3JwY0NvbXBhbnlTZXJ2aWNlEj8KBkNy",
            "ZWF0ZRIdLkNvbXBhbnkuQ3JlYXRlQ29tcGFueVJlcXVlc3QaFi5Db21wYW55",
            "LkVtcHR5UmVzcG9uc2USPwoGVXBkYXRlEh0uQ29tcGFueS5VcGRhdGVDb21w",
            "YW55UmVxdWVzdBoWLkNvbXBhbnkuRW1wdHlSZXNwb25zZRI/CgZEZWxldGUS",
            "HS5Db21wYW55LkRlbGV0ZUNvbXBhbnlSZXF1ZXN0GhYuQ29tcGFueS5FbXB0",
            "eVJlc3BvbnNlEkMKB0dldEJ5SWQSHi5Db21wYW55LkdldEJ5SWRDb21wYW55",
            "UmVxdWVzdBoYLkNvbXBhbnkuQ29tcGFueVJlc3BvbnNlEkUKBkdldEFsbBIf",
            "LkNvbXBhbnkuR2V0QWxsQ29tcGFuaWVzUmVxdWVzdBoaLkNvbXBhbnkuQ29t",
            "cGFuaWVzUmVzcG9uc2VCCqoCB0NvbXBhbnliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.EmptyResponse), global::Company.EmptyResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.GetByIdCompanyRequest), global::Company.GetByIdCompanyRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.GetAllCompaniesRequest), global::Company.GetAllCompaniesRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.CreateCompanyRequest), global::Company.CreateCompanyRequest.Parser, new[]{ "LegalName", "TradeName", "ContactNumber", "Document", "BankAccountId", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.Address), global::Company.Address.Parser, new[]{ "Street", "District", "City", "Number", "Complement", "ZipCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.UpdateCompanyRequest), global::Company.UpdateCompanyRequest.Parser, new[]{ "Id", "LegalName", "TradeName", "ContactNumber", "Document", "BankAccountId", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.DeleteCompanyRequest), global::Company.DeleteCompanyRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.CompanyResponse), global::Company.CompanyResponse.Parser, new[]{ "Id", "LegalName", "TradeName", "ContactNumber", "Document", "BankAccountId", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.CompaniesResponse), global::Company.CompaniesResponse.Parser, new[]{ "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EmptyResponse : pb::IMessage<EmptyResponse> {
    private static readonly pb::MessageParser<EmptyResponse> _parser = new pb::MessageParser<EmptyResponse>(() => new EmptyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.CompanyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse(EmptyResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse Clone() {
      return new EmptyResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetByIdCompanyRequest : pb::IMessage<GetByIdCompanyRequest> {
    private static readonly pb::MessageParser<GetByIdCompanyRequest> _parser = new pb::MessageParser<GetByIdCompanyRequest>(() => new GetByIdCompanyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByIdCompanyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.CompanyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdCompanyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdCompanyRequest(GetByIdCompanyRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdCompanyRequest Clone() {
      return new GetByIdCompanyRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByIdCompanyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByIdCompanyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByIdCompanyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllCompaniesRequest : pb::IMessage<GetAllCompaniesRequest> {
    private static readonly pb::MessageParser<GetAllCompaniesRequest> _parser = new pb::MessageParser<GetAllCompaniesRequest>(() => new GetAllCompaniesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllCompaniesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.CompanyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCompaniesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCompaniesRequest(GetAllCompaniesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCompaniesRequest Clone() {
      return new GetAllCompaniesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllCompaniesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllCompaniesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllCompaniesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CreateCompanyRequest : pb::IMessage<CreateCompanyRequest> {
    private static readonly pb::MessageParser<CreateCompanyRequest> _parser = new pb::MessageParser<CreateCompanyRequest>(() => new CreateCompanyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateCompanyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.CompanyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCompanyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCompanyRequest(CreateCompanyRequest other) : this() {
      legalName_ = other.legalName_;
      tradeName_ = other.tradeName_;
      contactNumber_ = other.contactNumber_;
      document_ = other.document_;
      bankAccountId_ = other.bankAccountId_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCompanyRequest Clone() {
      return new CreateCompanyRequest(this);
    }

    /// <summary>Field number for the "legalName" field.</summary>
    public const int LegalNameFieldNumber = 1;
    private string legalName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegalName {
      get { return legalName_; }
      set {
        legalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tradeName" field.</summary>
    public const int TradeNameFieldNumber = 2;
    private string tradeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TradeName {
      get { return tradeName_; }
      set {
        tradeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contactNumber" field.</summary>
    public const int ContactNumberFieldNumber = 3;
    private string contactNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactNumber {
      get { return contactNumber_; }
      set {
        contactNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 4;
    private string document_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Document {
      get { return document_; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bankAccountId" field.</summary>
    public const int BankAccountIdFieldNumber = 5;
    private string bankAccountId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankAccountId {
      get { return bankAccountId_; }
      set {
        bankAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 6;
    private global::Company.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateCompanyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateCompanyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LegalName != other.LegalName) return false;
      if (TradeName != other.TradeName) return false;
      if (ContactNumber != other.ContactNumber) return false;
      if (Document != other.Document) return false;
      if (BankAccountId != other.BankAccountId) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LegalName.Length != 0) hash ^= LegalName.GetHashCode();
      if (TradeName.Length != 0) hash ^= TradeName.GetHashCode();
      if (ContactNumber.Length != 0) hash ^= ContactNumber.GetHashCode();
      if (Document.Length != 0) hash ^= Document.GetHashCode();
      if (BankAccountId.Length != 0) hash ^= BankAccountId.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LegalName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LegalName);
      }
      if (TradeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TradeName);
      }
      if (ContactNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContactNumber);
      }
      if (Document.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Document);
      }
      if (BankAccountId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BankAccountId);
      }
      if (address_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LegalName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LegalName);
      }
      if (TradeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TradeName);
      }
      if (ContactNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactNumber);
      }
      if (Document.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Document);
      }
      if (BankAccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BankAccountId);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateCompanyRequest other) {
      if (other == null) {
        return;
      }
      if (other.LegalName.Length != 0) {
        LegalName = other.LegalName;
      }
      if (other.TradeName.Length != 0) {
        TradeName = other.TradeName;
      }
      if (other.ContactNumber.Length != 0) {
        ContactNumber = other.ContactNumber;
      }
      if (other.Document.Length != 0) {
        Document = other.Document;
      }
      if (other.BankAccountId.Length != 0) {
        BankAccountId = other.BankAccountId;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Company.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LegalName = input.ReadString();
            break;
          }
          case 18: {
            TradeName = input.ReadString();
            break;
          }
          case 26: {
            ContactNumber = input.ReadString();
            break;
          }
          case 34: {
            Document = input.ReadString();
            break;
          }
          case 42: {
            BankAccountId = input.ReadString();
            break;
          }
          case 50: {
            if (address_ == null) {
              Address = new global::Company.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.CompanyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      street_ = other.street_;
      district_ = other.district_;
      city_ = other.city_;
      number_ = other.number_;
      complement_ = other.complement_;
      zipCode_ = other.zipCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "Street" field.</summary>
    public const int StreetFieldNumber = 1;
    private string street_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Street {
      get { return street_; }
      set {
        street_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "District" field.</summary>
    public const int DistrictFieldNumber = 2;
    private string district_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string District {
      get { return district_; }
      set {
        district_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "City" field.</summary>
    public const int CityFieldNumber = 3;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Number" field.</summary>
    public const int NumberFieldNumber = 4;
    private string number_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Complement" field.</summary>
    public const int ComplementFieldNumber = 5;
    private string complement_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Complement {
      get { return complement_; }
      set {
        complement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ZipCode" field.</summary>
    public const int ZipCodeFieldNumber = 6;
    private string zipCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZipCode {
      get { return zipCode_; }
      set {
        zipCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Street != other.Street) return false;
      if (District != other.District) return false;
      if (City != other.City) return false;
      if (Number != other.Number) return false;
      if (Complement != other.Complement) return false;
      if (ZipCode != other.ZipCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Street.Length != 0) hash ^= Street.GetHashCode();
      if (District.Length != 0) hash ^= District.GetHashCode();
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (Number.Length != 0) hash ^= Number.GetHashCode();
      if (Complement.Length != 0) hash ^= Complement.GetHashCode();
      if (ZipCode.Length != 0) hash ^= ZipCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Street.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Street);
      }
      if (District.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(District);
      }
      if (City.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(City);
      }
      if (Number.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Number);
      }
      if (Complement.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Complement);
      }
      if (ZipCode.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ZipCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Street.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Street);
      }
      if (District.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(District);
      }
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (Number.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (Complement.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Complement);
      }
      if (ZipCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZipCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.Street.Length != 0) {
        Street = other.Street;
      }
      if (other.District.Length != 0) {
        District = other.District;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.Number.Length != 0) {
        Number = other.Number;
      }
      if (other.Complement.Length != 0) {
        Complement = other.Complement;
      }
      if (other.ZipCode.Length != 0) {
        ZipCode = other.ZipCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Street = input.ReadString();
            break;
          }
          case 18: {
            District = input.ReadString();
            break;
          }
          case 26: {
            City = input.ReadString();
            break;
          }
          case 34: {
            Number = input.ReadString();
            break;
          }
          case 42: {
            Complement = input.ReadString();
            break;
          }
          case 50: {
            ZipCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateCompanyRequest : pb::IMessage<UpdateCompanyRequest> {
    private static readonly pb::MessageParser<UpdateCompanyRequest> _parser = new pb::MessageParser<UpdateCompanyRequest>(() => new UpdateCompanyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCompanyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.CompanyReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompanyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompanyRequest(UpdateCompanyRequest other) : this() {
      id_ = other.id_;
      legalName_ = other.legalName_;
      tradeName_ = other.tradeName_;
      contactNumber_ = other.contactNumber_;
      document_ = other.document_;
      bankAccountId_ = other.bankAccountId_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompanyRequest Clone() {
      return new UpdateCompanyRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "legalName" field.</summary>
    public const int LegalNameFieldNumber = 2;
    private string legalName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegalName {
      get { return legalName_; }
      set {
        legalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tradeName" field.</summary>
    public const int TradeNameFieldNumber = 3;
    private string tradeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TradeName {
      get { return tradeName_; }
      set {
        tradeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contactNumber" field.</summary>
    public const int ContactNumberFieldNumber = 4;
    private string contactNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactNumber {
      get { return contactNumber_; }
      set {
        contactNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 5;
    private string document_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Document {
      get { return document_; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bankAccountId" field.</summary>
    public const int BankAccountIdFieldNumber = 6;
    private string bankAccountId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankAccountId {
      get { return bankAccountId_; }
      set {
        bankAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 7;
    private global::Company.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCompanyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCompanyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (LegalName != other.LegalName) return false;
      if (TradeName != other.TradeName) return false;
      if (ContactNumber != other.ContactNumber) return false;
      if (Document != other.Document) return false;
      if (BankAccountId != other.BankAccountId) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (LegalName.Length != 0) hash ^= LegalName.GetHashCode();
      if (TradeName.Length != 0) hash ^= TradeName.GetHashCode();
      if (ContactNumber.Length != 0) hash ^= ContactNumber.GetHashCode();
      if (Document.Length != 0) hash ^= Document.GetHashCode();
      if (BankAccountId.Length != 0) hash ^= BankAccountId.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (LegalName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LegalName);
      }
      if (TradeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TradeName);
      }
      if (ContactNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContactNumber);
      }
      if (Document.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Document);
      }
      if (BankAccountId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BankAccountId);
      }
      if (address_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (LegalName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LegalName);
      }
      if (TradeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TradeName);
      }
      if (ContactNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactNumber);
      }
      if (Document.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Document);
      }
      if (BankAccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BankAccountId);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCompanyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.LegalName.Length != 0) {
        LegalName = other.LegalName;
      }
      if (other.TradeName.Length != 0) {
        TradeName = other.TradeName;
      }
      if (other.ContactNumber.Length != 0) {
        ContactNumber = other.ContactNumber;
      }
      if (other.Document.Length != 0) {
        Document = other.Document;
      }
      if (other.BankAccountId.Length != 0) {
        BankAccountId = other.BankAccountId;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Company.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            LegalName = input.ReadString();
            break;
          }
          case 26: {
            TradeName = input.ReadString();
            break;
          }
          case 34: {
            ContactNumber = input.ReadString();
            break;
          }
          case 42: {
            Document = input.ReadString();
            break;
          }
          case 50: {
            BankAccountId = input.ReadString();
            break;
          }
          case 58: {
            if (address_ == null) {
              Address = new global::Company.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteCompanyRequest : pb::IMessage<DeleteCompanyRequest> {
    private static readonly pb::MessageParser<DeleteCompanyRequest> _parser = new pb::MessageParser<DeleteCompanyRequest>(() => new DeleteCompanyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteCompanyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.CompanyReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCompanyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCompanyRequest(DeleteCompanyRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCompanyRequest Clone() {
      return new DeleteCompanyRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteCompanyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteCompanyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteCompanyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyResponse : pb::IMessage<CompanyResponse> {
    private static readonly pb::MessageParser<CompanyResponse> _parser = new pb::MessageParser<CompanyResponse>(() => new CompanyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.CompanyReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyResponse(CompanyResponse other) : this() {
      id_ = other.id_;
      legalName_ = other.legalName_;
      tradeName_ = other.tradeName_;
      contactNumber_ = other.contactNumber_;
      document_ = other.document_;
      bankAccountId_ = other.bankAccountId_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyResponse Clone() {
      return new CompanyResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "legalName" field.</summary>
    public const int LegalNameFieldNumber = 2;
    private string legalName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegalName {
      get { return legalName_; }
      set {
        legalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tradeName" field.</summary>
    public const int TradeNameFieldNumber = 3;
    private string tradeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TradeName {
      get { return tradeName_; }
      set {
        tradeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contactNumber" field.</summary>
    public const int ContactNumberFieldNumber = 4;
    private string contactNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactNumber {
      get { return contactNumber_; }
      set {
        contactNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 5;
    private string document_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Document {
      get { return document_; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bankAccountId" field.</summary>
    public const int BankAccountIdFieldNumber = 6;
    private string bankAccountId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankAccountId {
      get { return bankAccountId_; }
      set {
        bankAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 7;
    private global::Company.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (LegalName != other.LegalName) return false;
      if (TradeName != other.TradeName) return false;
      if (ContactNumber != other.ContactNumber) return false;
      if (Document != other.Document) return false;
      if (BankAccountId != other.BankAccountId) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (LegalName.Length != 0) hash ^= LegalName.GetHashCode();
      if (TradeName.Length != 0) hash ^= TradeName.GetHashCode();
      if (ContactNumber.Length != 0) hash ^= ContactNumber.GetHashCode();
      if (Document.Length != 0) hash ^= Document.GetHashCode();
      if (BankAccountId.Length != 0) hash ^= BankAccountId.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (LegalName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LegalName);
      }
      if (TradeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TradeName);
      }
      if (ContactNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContactNumber);
      }
      if (Document.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Document);
      }
      if (BankAccountId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BankAccountId);
      }
      if (address_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (LegalName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LegalName);
      }
      if (TradeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TradeName);
      }
      if (ContactNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactNumber);
      }
      if (Document.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Document);
      }
      if (BankAccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BankAccountId);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.LegalName.Length != 0) {
        LegalName = other.LegalName;
      }
      if (other.TradeName.Length != 0) {
        TradeName = other.TradeName;
      }
      if (other.ContactNumber.Length != 0) {
        ContactNumber = other.ContactNumber;
      }
      if (other.Document.Length != 0) {
        Document = other.Document;
      }
      if (other.BankAccountId.Length != 0) {
        BankAccountId = other.BankAccountId;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Company.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            LegalName = input.ReadString();
            break;
          }
          case 26: {
            TradeName = input.ReadString();
            break;
          }
          case 34: {
            ContactNumber = input.ReadString();
            break;
          }
          case 42: {
            Document = input.ReadString();
            break;
          }
          case 50: {
            BankAccountId = input.ReadString();
            break;
          }
          case 58: {
            if (address_ == null) {
              Address = new global::Company.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompaniesResponse : pb::IMessage<CompaniesResponse> {
    private static readonly pb::MessageParser<CompaniesResponse> _parser = new pb::MessageParser<CompaniesResponse>(() => new CompaniesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompaniesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.CompanyReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompaniesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompaniesResponse(CompaniesResponse other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompaniesResponse Clone() {
      return new CompaniesResponse(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Company.CompanyResponse> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Company.CompanyResponse.Parser);
    private readonly pbc::RepeatedField<global::Company.CompanyResponse> items_ = new pbc::RepeatedField<global::Company.CompanyResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Company.CompanyResponse> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompaniesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompaniesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompaniesResponse other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
