// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/customer.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Customers {
  public static partial class GrpcCustomerService
  {
    static readonly string __ServiceName = "Customer.GrpcCustomerService";

    static readonly grpc::Marshaller<global::Customers.CreateCustomerRequest> __Marshaller_Customer_CreateCustomerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Customers.CreateCustomerRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Customers.EmptyResponse> __Marshaller_Customer_EmptyResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Customers.EmptyResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Customers.UpdateCustomerRequest> __Marshaller_Customer_UpdateCustomerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Customers.UpdateCustomerRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Customers.DeleteCustomerRequest> __Marshaller_Customer_DeleteCustomerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Customers.DeleteCustomerRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Customers.GetByIdCustomerRequest> __Marshaller_Customer_GetByIdCustomerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Customers.GetByIdCustomerRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Customers.CustomerResponse> __Marshaller_Customer_CustomerResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Customers.CustomerResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Customers.GetAllCustomersRequest> __Marshaller_Customer_GetAllCustomersRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Customers.GetAllCustomersRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Customers.CustomersResponse> __Marshaller_Customer_CustomersResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Customers.CustomersResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Customers.CreateCustomerRequest, global::Customers.EmptyResponse> __Method_Create = new grpc::Method<global::Customers.CreateCustomerRequest, global::Customers.EmptyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_Customer_CreateCustomerRequest,
        __Marshaller_Customer_EmptyResponse);

    static readonly grpc::Method<global::Customers.UpdateCustomerRequest, global::Customers.EmptyResponse> __Method_Update = new grpc::Method<global::Customers.UpdateCustomerRequest, global::Customers.EmptyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Customer_UpdateCustomerRequest,
        __Marshaller_Customer_EmptyResponse);

    static readonly grpc::Method<global::Customers.DeleteCustomerRequest, global::Customers.EmptyResponse> __Method_Delete = new grpc::Method<global::Customers.DeleteCustomerRequest, global::Customers.EmptyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_Customer_DeleteCustomerRequest,
        __Marshaller_Customer_EmptyResponse);

    static readonly grpc::Method<global::Customers.GetByIdCustomerRequest, global::Customers.CustomerResponse> __Method_GetById = new grpc::Method<global::Customers.GetByIdCustomerRequest, global::Customers.CustomerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetById",
        __Marshaller_Customer_GetByIdCustomerRequest,
        __Marshaller_Customer_CustomerResponse);

    static readonly grpc::Method<global::Customers.GetAllCustomersRequest, global::Customers.CustomersResponse> __Method_GetAll = new grpc::Method<global::Customers.GetAllCustomersRequest, global::Customers.CustomersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_Customer_GetAllCustomersRequest,
        __Marshaller_Customer_CustomersResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Customers.CustomerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GrpcCustomerService</summary>
    [grpc::BindServiceMethod(typeof(GrpcCustomerService), "BindService")]
    public abstract partial class GrpcCustomerServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Customers.EmptyResponse> Create(global::Customers.CreateCustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Customers.EmptyResponse> Update(global::Customers.UpdateCustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Customers.EmptyResponse> Delete(global::Customers.DeleteCustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Customers.CustomerResponse> GetById(global::Customers.GetByIdCustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Customers.CustomersResponse> GetAll(global::Customers.GetAllCustomersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GrpcCustomerServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Delete, serviceImpl.Delete)
          .AddMethod(__Method_GetById, serviceImpl.GetById)
          .AddMethod(__Method_GetAll, serviceImpl.GetAll).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GrpcCustomerServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Customers.CreateCustomerRequest, global::Customers.EmptyResponse>(serviceImpl.Create));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Customers.UpdateCustomerRequest, global::Customers.EmptyResponse>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Customers.DeleteCustomerRequest, global::Customers.EmptyResponse>(serviceImpl.Delete));
      serviceBinder.AddMethod(__Method_GetById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Customers.GetByIdCustomerRequest, global::Customers.CustomerResponse>(serviceImpl.GetById));
      serviceBinder.AddMethod(__Method_GetAll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Customers.GetAllCustomersRequest, global::Customers.CustomersResponse>(serviceImpl.GetAll));
    }

  }
}
#endregion
