// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/customer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Customers {

  /// <summary>Holder for reflection information generated from Protos/customer.proto</summary>
  public static partial class CustomerReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/customer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CustomerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm90b3MvY3VzdG9tZXIucHJvdG8SCEN1c3RvbWVyIg8KDUVtcHR5UmVz",
            "cG9uc2UiJAoWR2V0QnlJZEN1c3RvbWVyUmVxdWVzdBIKCgJpZBgBIAEoCSIY",
            "ChZHZXRBbGxDdXN0b21lcnNSZXF1ZXN0IooBChVDcmVhdGVDdXN0b21lclJl",
            "cXVlc3QSEQoJbGVnYWxOYW1lGAEgASgJEhEKCXRyYWRlTmFtZRgCIAEoCRIV",
            "Cg1jb250YWN0TnVtYmVyGAMgASgJEhAKCGRvY3VtZW50GAQgASgJEiIKB0Fk",
            "ZHJlc3MYBSABKAsyES5DdXN0b21lci5BZGRyZXNzIm4KB0FkZHJlc3MSDgoG",
            "U3RyZWV0GAEgASgJEhAKCERpc3RyaWN0GAIgASgJEgwKBENpdHkYAyABKAkS",
            "DgoGTnVtYmVyGAQgASgJEhIKCkNvbXBsZW1lbnQYBSABKAkSDwoHWmlwQ29k",
            "ZRgGIAEoCSKWAQoVVXBkYXRlQ3VzdG9tZXJSZXF1ZXN0EgoKAmlkGAEgASgJ",
            "EhEKCWxlZ2FsTmFtZRgCIAEoCRIRCgl0cmFkZU5hbWUYAyABKAkSFQoNY29u",
            "dGFjdE51bWJlchgEIAEoCRIQCghkb2N1bWVudBgFIAEoCRIiCgdBZGRyZXNz",
            "GAYgASgLMhEuQ3VzdG9tZXIuQWRkcmVzcyIjChVEZWxldGVDdXN0b21lclJl",
            "cXVlc3QSCgoCaWQYASABKAkikQEKEEN1c3RvbWVyUmVzcG9uc2USCgoCaWQY",
            "ASABKAkSEQoJbGVnYWxOYW1lGAIgASgJEhEKCXRyYWRlTmFtZRgDIAEoCRIV",
            "Cg1jb250YWN0TnVtYmVyGAQgASgJEhAKCGRvY3VtZW50GAUgASgJEiIKB0Fk",
            "ZHJlc3MYBiABKAsyES5DdXN0b21lci5BZGRyZXNzIj4KEUN1c3RvbWVyc1Jl",
            "c3BvbnNlEikKBWl0ZW1zGAEgAygLMhouQ3VzdG9tZXIuQ3VzdG9tZXJSZXNw",
            "b25zZTLzAgoTR3JwY0N1c3RvbWVyU2VydmljZRJCCgZDcmVhdGUSHy5DdXN0",
            "b21lci5DcmVhdGVDdXN0b21lclJlcXVlc3QaFy5DdXN0b21lci5FbXB0eVJl",
            "c3BvbnNlEkIKBlVwZGF0ZRIfLkN1c3RvbWVyLlVwZGF0ZUN1c3RvbWVyUmVx",
            "dWVzdBoXLkN1c3RvbWVyLkVtcHR5UmVzcG9uc2USQgoGRGVsZXRlEh8uQ3Vz",
            "dG9tZXIuRGVsZXRlQ3VzdG9tZXJSZXF1ZXN0GhcuQ3VzdG9tZXIuRW1wdHlS",
            "ZXNwb25zZRJHCgdHZXRCeUlkEiAuQ3VzdG9tZXIuR2V0QnlJZEN1c3RvbWVy",
            "UmVxdWVzdBoaLkN1c3RvbWVyLkN1c3RvbWVyUmVzcG9uc2USRwoGR2V0QWxs",
            "EiAuQ3VzdG9tZXIuR2V0QWxsQ3VzdG9tZXJzUmVxdWVzdBobLkN1c3RvbWVy",
            "LkN1c3RvbWVyc1Jlc3BvbnNlQgyqAglDdXN0b21lcnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Customers.EmptyResponse), global::Customers.EmptyResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Customers.GetByIdCustomerRequest), global::Customers.GetByIdCustomerRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Customers.GetAllCustomersRequest), global::Customers.GetAllCustomersRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Customers.CreateCustomerRequest), global::Customers.CreateCustomerRequest.Parser, new[]{ "LegalName", "TradeName", "ContactNumber", "Document", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Customers.Address), global::Customers.Address.Parser, new[]{ "Street", "District", "City", "Number", "Complement", "ZipCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Customers.UpdateCustomerRequest), global::Customers.UpdateCustomerRequest.Parser, new[]{ "Id", "LegalName", "TradeName", "ContactNumber", "Document", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Customers.DeleteCustomerRequest), global::Customers.DeleteCustomerRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Customers.CustomerResponse), global::Customers.CustomerResponse.Parser, new[]{ "Id", "LegalName", "TradeName", "ContactNumber", "Document", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Customers.CustomersResponse), global::Customers.CustomersResponse.Parser, new[]{ "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EmptyResponse : pb::IMessage<EmptyResponse> {
    private static readonly pb::MessageParser<EmptyResponse> _parser = new pb::MessageParser<EmptyResponse>(() => new EmptyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Customers.CustomerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse(EmptyResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse Clone() {
      return new EmptyResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetByIdCustomerRequest : pb::IMessage<GetByIdCustomerRequest> {
    private static readonly pb::MessageParser<GetByIdCustomerRequest> _parser = new pb::MessageParser<GetByIdCustomerRequest>(() => new GetByIdCustomerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByIdCustomerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Customers.CustomerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdCustomerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdCustomerRequest(GetByIdCustomerRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdCustomerRequest Clone() {
      return new GetByIdCustomerRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByIdCustomerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByIdCustomerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByIdCustomerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllCustomersRequest : pb::IMessage<GetAllCustomersRequest> {
    private static readonly pb::MessageParser<GetAllCustomersRequest> _parser = new pb::MessageParser<GetAllCustomersRequest>(() => new GetAllCustomersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllCustomersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Customers.CustomerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCustomersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCustomersRequest(GetAllCustomersRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCustomersRequest Clone() {
      return new GetAllCustomersRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllCustomersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllCustomersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllCustomersRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CreateCustomerRequest : pb::IMessage<CreateCustomerRequest> {
    private static readonly pb::MessageParser<CreateCustomerRequest> _parser = new pb::MessageParser<CreateCustomerRequest>(() => new CreateCustomerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateCustomerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Customers.CustomerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCustomerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCustomerRequest(CreateCustomerRequest other) : this() {
      legalName_ = other.legalName_;
      tradeName_ = other.tradeName_;
      contactNumber_ = other.contactNumber_;
      document_ = other.document_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCustomerRequest Clone() {
      return new CreateCustomerRequest(this);
    }

    /// <summary>Field number for the "legalName" field.</summary>
    public const int LegalNameFieldNumber = 1;
    private string legalName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegalName {
      get { return legalName_; }
      set {
        legalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tradeName" field.</summary>
    public const int TradeNameFieldNumber = 2;
    private string tradeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TradeName {
      get { return tradeName_; }
      set {
        tradeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contactNumber" field.</summary>
    public const int ContactNumberFieldNumber = 3;
    private string contactNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactNumber {
      get { return contactNumber_; }
      set {
        contactNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 4;
    private string document_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Document {
      get { return document_; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 5;
    private global::Customers.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Customers.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateCustomerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateCustomerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LegalName != other.LegalName) return false;
      if (TradeName != other.TradeName) return false;
      if (ContactNumber != other.ContactNumber) return false;
      if (Document != other.Document) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LegalName.Length != 0) hash ^= LegalName.GetHashCode();
      if (TradeName.Length != 0) hash ^= TradeName.GetHashCode();
      if (ContactNumber.Length != 0) hash ^= ContactNumber.GetHashCode();
      if (Document.Length != 0) hash ^= Document.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LegalName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LegalName);
      }
      if (TradeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TradeName);
      }
      if (ContactNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContactNumber);
      }
      if (Document.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Document);
      }
      if (address_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LegalName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LegalName);
      }
      if (TradeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TradeName);
      }
      if (ContactNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactNumber);
      }
      if (Document.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Document);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateCustomerRequest other) {
      if (other == null) {
        return;
      }
      if (other.LegalName.Length != 0) {
        LegalName = other.LegalName;
      }
      if (other.TradeName.Length != 0) {
        TradeName = other.TradeName;
      }
      if (other.ContactNumber.Length != 0) {
        ContactNumber = other.ContactNumber;
      }
      if (other.Document.Length != 0) {
        Document = other.Document;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Customers.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LegalName = input.ReadString();
            break;
          }
          case 18: {
            TradeName = input.ReadString();
            break;
          }
          case 26: {
            ContactNumber = input.ReadString();
            break;
          }
          case 34: {
            Document = input.ReadString();
            break;
          }
          case 42: {
            if (address_ == null) {
              Address = new global::Customers.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Customers.CustomerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      street_ = other.street_;
      district_ = other.district_;
      city_ = other.city_;
      number_ = other.number_;
      complement_ = other.complement_;
      zipCode_ = other.zipCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "Street" field.</summary>
    public const int StreetFieldNumber = 1;
    private string street_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Street {
      get { return street_; }
      set {
        street_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "District" field.</summary>
    public const int DistrictFieldNumber = 2;
    private string district_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string District {
      get { return district_; }
      set {
        district_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "City" field.</summary>
    public const int CityFieldNumber = 3;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Number" field.</summary>
    public const int NumberFieldNumber = 4;
    private string number_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Complement" field.</summary>
    public const int ComplementFieldNumber = 5;
    private string complement_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Complement {
      get { return complement_; }
      set {
        complement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ZipCode" field.</summary>
    public const int ZipCodeFieldNumber = 6;
    private string zipCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZipCode {
      get { return zipCode_; }
      set {
        zipCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Street != other.Street) return false;
      if (District != other.District) return false;
      if (City != other.City) return false;
      if (Number != other.Number) return false;
      if (Complement != other.Complement) return false;
      if (ZipCode != other.ZipCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Street.Length != 0) hash ^= Street.GetHashCode();
      if (District.Length != 0) hash ^= District.GetHashCode();
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (Number.Length != 0) hash ^= Number.GetHashCode();
      if (Complement.Length != 0) hash ^= Complement.GetHashCode();
      if (ZipCode.Length != 0) hash ^= ZipCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Street.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Street);
      }
      if (District.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(District);
      }
      if (City.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(City);
      }
      if (Number.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Number);
      }
      if (Complement.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Complement);
      }
      if (ZipCode.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ZipCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Street.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Street);
      }
      if (District.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(District);
      }
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (Number.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (Complement.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Complement);
      }
      if (ZipCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZipCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.Street.Length != 0) {
        Street = other.Street;
      }
      if (other.District.Length != 0) {
        District = other.District;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.Number.Length != 0) {
        Number = other.Number;
      }
      if (other.Complement.Length != 0) {
        Complement = other.Complement;
      }
      if (other.ZipCode.Length != 0) {
        ZipCode = other.ZipCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Street = input.ReadString();
            break;
          }
          case 18: {
            District = input.ReadString();
            break;
          }
          case 26: {
            City = input.ReadString();
            break;
          }
          case 34: {
            Number = input.ReadString();
            break;
          }
          case 42: {
            Complement = input.ReadString();
            break;
          }
          case 50: {
            ZipCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateCustomerRequest : pb::IMessage<UpdateCustomerRequest> {
    private static readonly pb::MessageParser<UpdateCustomerRequest> _parser = new pb::MessageParser<UpdateCustomerRequest>(() => new UpdateCustomerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCustomerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Customers.CustomerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCustomerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCustomerRequest(UpdateCustomerRequest other) : this() {
      id_ = other.id_;
      legalName_ = other.legalName_;
      tradeName_ = other.tradeName_;
      contactNumber_ = other.contactNumber_;
      document_ = other.document_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCustomerRequest Clone() {
      return new UpdateCustomerRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "legalName" field.</summary>
    public const int LegalNameFieldNumber = 2;
    private string legalName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegalName {
      get { return legalName_; }
      set {
        legalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tradeName" field.</summary>
    public const int TradeNameFieldNumber = 3;
    private string tradeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TradeName {
      get { return tradeName_; }
      set {
        tradeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contactNumber" field.</summary>
    public const int ContactNumberFieldNumber = 4;
    private string contactNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactNumber {
      get { return contactNumber_; }
      set {
        contactNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 5;
    private string document_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Document {
      get { return document_; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 6;
    private global::Customers.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Customers.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCustomerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCustomerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (LegalName != other.LegalName) return false;
      if (TradeName != other.TradeName) return false;
      if (ContactNumber != other.ContactNumber) return false;
      if (Document != other.Document) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (LegalName.Length != 0) hash ^= LegalName.GetHashCode();
      if (TradeName.Length != 0) hash ^= TradeName.GetHashCode();
      if (ContactNumber.Length != 0) hash ^= ContactNumber.GetHashCode();
      if (Document.Length != 0) hash ^= Document.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (LegalName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LegalName);
      }
      if (TradeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TradeName);
      }
      if (ContactNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContactNumber);
      }
      if (Document.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Document);
      }
      if (address_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (LegalName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LegalName);
      }
      if (TradeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TradeName);
      }
      if (ContactNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactNumber);
      }
      if (Document.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Document);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCustomerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.LegalName.Length != 0) {
        LegalName = other.LegalName;
      }
      if (other.TradeName.Length != 0) {
        TradeName = other.TradeName;
      }
      if (other.ContactNumber.Length != 0) {
        ContactNumber = other.ContactNumber;
      }
      if (other.Document.Length != 0) {
        Document = other.Document;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Customers.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            LegalName = input.ReadString();
            break;
          }
          case 26: {
            TradeName = input.ReadString();
            break;
          }
          case 34: {
            ContactNumber = input.ReadString();
            break;
          }
          case 42: {
            Document = input.ReadString();
            break;
          }
          case 50: {
            if (address_ == null) {
              Address = new global::Customers.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteCustomerRequest : pb::IMessage<DeleteCustomerRequest> {
    private static readonly pb::MessageParser<DeleteCustomerRequest> _parser = new pb::MessageParser<DeleteCustomerRequest>(() => new DeleteCustomerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteCustomerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Customers.CustomerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCustomerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCustomerRequest(DeleteCustomerRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCustomerRequest Clone() {
      return new DeleteCustomerRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteCustomerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteCustomerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteCustomerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomerResponse : pb::IMessage<CustomerResponse> {
    private static readonly pb::MessageParser<CustomerResponse> _parser = new pb::MessageParser<CustomerResponse>(() => new CustomerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Customers.CustomerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerResponse(CustomerResponse other) : this() {
      id_ = other.id_;
      legalName_ = other.legalName_;
      tradeName_ = other.tradeName_;
      contactNumber_ = other.contactNumber_;
      document_ = other.document_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerResponse Clone() {
      return new CustomerResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "legalName" field.</summary>
    public const int LegalNameFieldNumber = 2;
    private string legalName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LegalName {
      get { return legalName_; }
      set {
        legalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tradeName" field.</summary>
    public const int TradeNameFieldNumber = 3;
    private string tradeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TradeName {
      get { return tradeName_; }
      set {
        tradeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contactNumber" field.</summary>
    public const int ContactNumberFieldNumber = 4;
    private string contactNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactNumber {
      get { return contactNumber_; }
      set {
        contactNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 5;
    private string document_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Document {
      get { return document_; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 6;
    private global::Customers.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Customers.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (LegalName != other.LegalName) return false;
      if (TradeName != other.TradeName) return false;
      if (ContactNumber != other.ContactNumber) return false;
      if (Document != other.Document) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (LegalName.Length != 0) hash ^= LegalName.GetHashCode();
      if (TradeName.Length != 0) hash ^= TradeName.GetHashCode();
      if (ContactNumber.Length != 0) hash ^= ContactNumber.GetHashCode();
      if (Document.Length != 0) hash ^= Document.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (LegalName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LegalName);
      }
      if (TradeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TradeName);
      }
      if (ContactNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContactNumber);
      }
      if (Document.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Document);
      }
      if (address_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (LegalName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LegalName);
      }
      if (TradeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TradeName);
      }
      if (ContactNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactNumber);
      }
      if (Document.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Document);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomerResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.LegalName.Length != 0) {
        LegalName = other.LegalName;
      }
      if (other.TradeName.Length != 0) {
        TradeName = other.TradeName;
      }
      if (other.ContactNumber.Length != 0) {
        ContactNumber = other.ContactNumber;
      }
      if (other.Document.Length != 0) {
        Document = other.Document;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Customers.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            LegalName = input.ReadString();
            break;
          }
          case 26: {
            TradeName = input.ReadString();
            break;
          }
          case 34: {
            ContactNumber = input.ReadString();
            break;
          }
          case 42: {
            Document = input.ReadString();
            break;
          }
          case 50: {
            if (address_ == null) {
              Address = new global::Customers.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomersResponse : pb::IMessage<CustomersResponse> {
    private static readonly pb::MessageParser<CustomersResponse> _parser = new pb::MessageParser<CustomersResponse>(() => new CustomersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Customers.CustomerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersResponse(CustomersResponse other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersResponse Clone() {
      return new CustomersResponse(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Customers.CustomerResponse> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Customers.CustomerResponse.Parser);
    private readonly pbc::RepeatedField<global::Customers.CustomerResponse> items_ = new pbc::RepeatedField<global::Customers.CustomerResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Customers.CustomerResponse> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomersResponse other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
